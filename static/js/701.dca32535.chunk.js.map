{"version":3,"file":"static/js/701.dca32535.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","ref","Component","className","props","_jsx","classNames","displayName","FormCheckLabel","bsPrefix","htmlFor","controlId","useContext","FormContext","useBootstrapPrefix","FormCheck","id","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","some","child","hasChildOfType","input","FormCheckInput","value","_jsxs","_Fragment","Object","assign","Input","Label","createWithBsPrefix","FormGroup","context","Col","breakpoints","useBootstrapBreakpoints","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","size","htmlSize","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","FormControl","Floating","FormFloating","Check","Text","Range","Select","plaintext","readOnly","warning","module","exports"],"sourceRoot":""}